{"version":3,"sources":["App.js","actions/counterActions.js","actions/loggedActions.js","reducers/counterReducer.js","reducers/loggedReducer.js","reducers/index.js","index.js"],"names":["App","counter","useSelector","state","isLogged","logged","dispatch","useDispatch","className","onClick","num","type","payload","counterReducer","action","loggedReducer","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"+JA4BeA,MAvBf,WACE,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvCG,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAME,UACxCC,EAAWC,cAEjB,OACE,sBAAKC,UAAU,MAAf,UACE,2CAAcP,KACd,4CAAeG,EAAW,OAAS,WACnC,wBAAQK,QAAS,WCdE,IAACC,EDelBJ,ECf2B,CACjCK,KAAM,YACNC,QAASF,IDcHJ,EEhBqB,CAC3BK,KAAM,YFaF,uBAIA,wBAAQF,QAAS,WCbE,IAACC,EDclBJ,ECd2B,CACjCK,KAAM,YACND,QDaMJ,EEhBsB,CAC5BK,KAAM,aFaF,uBAIA,wBAAQF,QAAS,kBAAMH,EEtBA,CAC3BK,KAAM,YFqBF,oBACA,wBAAQF,QAAS,kBAAMH,EEnBC,CAC5BK,KAAM,aFkBF,yB,OGVSE,EAbQ,WAAwB,IAAvBV,EAAsB,uDAAd,EAAGW,EAAW,uCAC5C,OAAQA,EAAOH,MACb,IAAK,YACH,OAAOR,GAASW,EAAOF,SAAW,GAEpC,IAAK,YACH,OAAOT,GAASW,EAAOJ,KAAO,GAEhC,QACE,OAAOP,ICIEY,EAbO,WAA2B,IAA1BZ,IAAyB,yDAAXW,EAAW,uCAC9C,OAAOA,EAAOH,MACZ,IAAK,SACH,OAAO,EAET,IAAK,UACH,OAAO,EAET,QACE,OAAOR,ICCEa,EALKC,YAAgB,CAClChB,QAASY,EACTR,OAAQU,ICGNG,EAAQC,YACVH,EAAcI,OAAOC,8BACnBD,OAAOC,gCAGXC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.11f69cc5.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"./actions/counterActions\";\nimport { signin, signout } from \"./actions/loggedActions\";\n\nfunction App() {\n  const counter = useSelector((state) => state.counter);\n  const isLogged = useSelector((state) => state.logged);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <h1>Counter: {counter}</h1>\n      <h1>isLogged: {isLogged ? \"true\" : \"false\"}</h1>\n      <button onClick={() => {\n        dispatch(increment())\n        dispatch(signin())\n      }}>increment</button>\n      <button onClick={() => {\n        dispatch(decrement());\n        dispatch(signout())\n      }}>decrement</button>\n      <button onClick={() => dispatch(signin())}>signin</button>\n      <button onClick={() => dispatch(signout())}>signout</button>\n    </div>\n  );\n}\n\nexport default App;\n","export const increment = (num) => ({\n  type: \"increment\",\n  payload: num\n});\n\nexport const decrement = (num) => ({\n  type: \"decrement\",\n  num\n});\n\n","export const signin = () => ({\n  type: \"signin\",\n});\n\nexport const signout = () => ({\n  type: \"signout\",\n});\n","const counterReducer = (state = 1, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return state + (action.payload || 1);\n\n    case \"decrement\":\n      return state - (action.num || 1);\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","const loggedReducer = (state = true, action) => {\n  switch(action.type) {\n    case 'signin': \n      return true;\n\n    case 'signout': \n      return false;\n\n    default: \n      return state;\n  }\n}\n\nexport default loggedReducer;","import counterReducer from \"./counterReducer\";\nimport loggedReducer from \"./loggedReducer\";\n\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n  counter: counterReducer,\n  logged: loggedReducer,\n});\n\nexport default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\n\n\nlet store = createStore(\n  allReducers,  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}